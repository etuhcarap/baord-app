name: Spring Boot Application Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git repository checkout
        uses: actions/checkout@v4

      - name: JDK 17 설치
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 파일 전송을 위한 디렉토리 생성
        run: mkdir ./board-app # .env, app.jar

      - name: Gradle Build
        run: ./gradlew clean build

      - name: Archive 파일명 변경
        run: mv ./build/libs/*SNAPSHOT.jar ./board-app/app.jar

      - name: github secrets에 저장된 ENV_PROPERTIES를 읽어서 .env 생성
        run: echo "${{ secrets.ENV_PROPERTIES }}" > ./board-app/.env

      - name: .env와 app.jar를 ec2에 전송
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PEM_KEY }}
          source: ./board-app
          target: /home/ec2-user/deploy

      - name: SSH를 통해 EC2에 접속 후 서비스 재 시작
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PEM_KEY }}
          script: |
            rm -rf /home/ec2-user/board-app
            mkdir /home/ec2-user/board-app
            mv /home/ec2-user/deploy/board-app /home/ec2-user
            cd /home/ec2-user/board-app
            sudo fuser -k -n tcp 8080 || true
            nohup java -jar /home/ec2-user/board-app/app.jar > application-log 2>&1 &
            rm -rf /home/ec2-user/deploy
